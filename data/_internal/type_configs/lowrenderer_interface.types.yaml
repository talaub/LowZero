module: LowRenderer
namespace:
  - Low
  - Renderer
  - Interface
dll_macro: LOW_EXPORT
types:
  Context:
    private_make: true
    header_imports:
      - LowRendererBackend.h
      - LowRendererRenderpass.h
    source_imports:
      - LowRendererInterface.h
    properties:
      context:
        type: Backend::Context
        no_setter: true
      renderpasses:
        type: Util::List<Renderpass>
        no_setter: true
    functions:
      make:
        static: true
        return_type: Context
        return_handle: true
        parameters:
          - name: name
            type: Util::Name
          - name: window
            type: Window*
          - name: framesInFlight
            type: uint8_t
          - name: validationEnabled
            type: bool
      get_frames_in_flight:
        return_type: uint8_t
      get_image_count:
        return_type: uint8_t
      get_current_frame_index:
        return_type: uint8_t
      get_current_image_index:
        return_type: uint8_t
      get_current_renderpass:
        return_type: Renderpass
        return_handle: true
      get_dimensions:
        return_type: Math::UVector2
      get_image_format:
        return_type: uint8_t
      get_window:
        return_type: Window
      wait_idle:
        return_type: void
      prepare_frame:
        return_type: uint8_t
      render_frame:
        return_type: void
      update_dimensions:
        return_type: void
      clear_committed_resource_signatures:
        return_type: void

  Renderpass:
    header_imports:
      - LowRendererBackend.h
    source_imports:
      - LowRendererInterface.h
      - LowRendererImage.h
    properties:
      renderpass:
        type: Backend::Renderpass
    functions:
      make:
        static: true
        return_type: Renderpass
        return_handle: true
        parameters:
          - name: name
            type: Util::Name
          - name: params
            type: RenderpassCreateParams
      get_dimensions:
        return_type: Math::UVector2
      begin:
        return_type: void
      end:
        return_type: void

  PipelineResourceSignature:
    private_make: true
    header_imports:
      - LowRendererBackend.h
      - LowRendererImage.h
      - LowRendererBuffer.h
    source_imports:
      - LowRendererInterface.h
    properties:
      signature:
        type: Backend::PipelineResourceSignature
        no_setter: true
    functions:
      make:
        static: true
        return_type: PipelineResourceSignature
        return_handle: true
        parameters:
          - name: name
            type: Util::Name
          - name: context
            type: Context
            handle: true
          - name: binding
            type: uint8_t
          - name: resourceDescriptions
            type: Util::List<Backend::PipelineResourceDescription>
      commit:
        return_type: void
      set_image_resource:
        return_type: void
        parameters:
          - name: name
            type: Util::Name
          - name: arrayIndex
            type: uint32_t
          - name: value
            type: Resource::Image
            handle: true
      set_sampler_resource:
        return_type: void
        parameters:
          - name: name
            type: Util::Name
          - name: arrayIndex
            type: uint32_t
          - name: value
            type: Resource::Image
            handle: true
      set_constant_buffer_resource:
        return_type: void
        parameters:
          - name: name
            type: Util::Name
          - name: arrayIndex
            type: uint32_t
          - name: value
            type: Resource::Buffer
            handle: true
      get_binding:
        return_type: uint8_t

  ComputePipeline:
    private_make: true
    header_imports:
      - LowRendererBackend.h
    source_imports:
      - LowRendererInterface.h
    properties:
      pipeline:
        type: Backend::Pipeline
        no_setter: true
    functions:
      make:
        static: true
        return_type: ComputePipeline
        return_handle: true
        parameters:
          - name: name
            type: Util::Name
          - name: params
            type: PipelineComputeCreateParams
      bind:
        return_type: void

  GraphicsPipeline:
    private_make: true
    header_imports:
      - LowRendererBackend.h
    source_imports:
      - LowRendererInterface.h
    properties:
      pipeline:
        type: Backend::Pipeline
        no_setter: true
    functions:
      make:
        static: true
        return_type: GraphicsPipeline
        return_handle: true
        parameters:
          - name: name
            type: Util::Name
          - name: params
            type: PipelineGraphicsCreateParams
      bind:
        return_type: void

